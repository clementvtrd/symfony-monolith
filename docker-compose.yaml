services:
  api:
    build:
      context: .
      dockerfile: services/php/Dockerfile
      target: dev
    ports:
      - 80:80
      - 443:443
      - 443:443/udp
    volumes:
      - ./app:/app
      - caddy_data:/data
      - caddy_config:/config
    tty: true
    depends_on:
      composer:
        condition: service_completed_successfully
      redis:
        condition: service_healthy
      mysql:
        condition: service_healthy

  mysql:
    build: services/mysql
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: allow
      MYSQL_USER: user
      MYSQL_PASSWORD: password
      MYSQL_DATABASE: app
    healthcheck:
      test: [CMD, mysqladmin ,ping, -h, localhost]
      timeout: 20s
      retries: 10

  redis:
    build: services/redis
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]

  composer:
    build:
      context: .
      dockerfile: services/php/Dockerfile
      target: composer
    entrypoint: [composer]
    command: [install, --ignore-platform-reqs]
    volumes:
      - ./app:/app

  tailwind:
    build:
      context: .
      dockerfile: services/php/Dockerfile
      target: dev
    command: [frankenphp, php-cli, bin/console, tailwind:build, --watch]
    volumes:
      - ./app:/app
      - caddy_data:/data
      - caddy_config:/config

volumes:
  caddy_data:
  caddy_config:
